"use strict";(self.webpackChunkjohnnyreilly_com=self.webpackChunkjohnnyreilly_com||[]).push([[2522],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>h});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},g=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(n),g=r,h=p["".concat(l,".").concat(g)]||p[g]||u[g]||a;return n?o.createElement(h,i(i({ref:t},d),{},{components:n})):o.createElement(h,i({ref:t},d))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}g.displayName="MDXCreateElement"},47166:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});n(67294);var o=n(3905);function r(){return r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r.apply(this,arguments)}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}const i={slug:"node-18-axios-and-unsafe-legacy-renegotiation-disabled",title:"Node.js 18, Axios and unsafe legacy renegotiation disabled",authors:"johnnyreilly",tags:["TLS","Node.js"],image:"./title-image.png",description:"With Node.js 18, unsafe legacy renegotiation was disabled. However, there are APIs that still need it. This post shows how support them with Axios.",hide_table_of_contents:!1},s=void 0,l={permalink:"/node-18-axios-and-unsafe-legacy-renegotiation-disabled",editUrl:"https://github.com/johnnyreilly/blog.johnnyreilly.com/edit/main/blog-website/blog/2023-03-09-node-18-node-18-axios-and-unsafe-legacy-renegotiation-disabled/index.md",source:"@site/blog/2023-03-09-node-18-node-18-axios-and-unsafe-legacy-renegotiation-disabled/index.md",title:"Node.js 18, Axios and unsafe legacy renegotiation disabled",description:"With Node.js 18, unsafe legacy renegotiation was disabled. However, there are APIs that still need it. This post shows how support them with Axios.",date:"2023-03-09T00:00:00.000Z",formattedDate:"March 9, 2023",tags:[{label:"TLS",permalink:"/tags/tls"},{label:"Node.js",permalink:"/tags/node-js"}],readingTime:1.265,hasTruncateMarker:!0,authors:[{name:"John Reilly",title:"OSS Engineer - TypeScript, Azure, React, Node.js, .NET",url:"https://johnnyreilly.com/about",imageURL:"https://johnnyreilly.com/img/profile.jpg",key:"johnnyreilly"}],frontMatter:{slug:"node-18-axios-and-unsafe-legacy-renegotiation-disabled",title:"Node.js 18, Axios and unsafe legacy renegotiation disabled",authors:"johnnyreilly",tags:["TLS","Node.js"],image:"./title-image.png",description:"With Node.js 18, unsafe legacy renegotiation was disabled. However, there are APIs that still need it. This post shows how support them with Axios.",hide_table_of_contents:!1},prevItem:{title:"Node.js 18, Axios and unsafe legacy renegotiation disabled",permalink:"/node-18-axios-and-unsafe-legacy-renegotiation-disabled"},nextItem:{title:"In defence of pull requests",permalink:"/in-defence-of-pull-requests"}},c={image:n(4268).Z,authorsImageUrls:[void 0]},d=[{value:"The error",id:"the-error",level:2},{value:"The fix",id:"the-fix",level:2}],p={toc:d};function u(e){var{components:t}=e,i=a(e,["components"]);return(0,o.kt)("wrapper",r({},p,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Node.js 18 doesn't allow legacy TLS renegotion by default. But some APIs still need it. This post shows how to support them with Axios."),(0,o.kt)("p",null,(0,o.kt)("img",{loading:"eager",fetchpriority:"high",alt:"title image reading &quot;Node.js 18, Axios and unsafe legacy renegotiation disabled&quot;",src:n(4268).Z,width:"800",height:"450"})),(0,o.kt)("h2",r({},{id:"the-error"}),"The error"),(0,o.kt)("p",null,"If you have code that uses Node.js and Axios, you may have encountered this error when you upgraded to Node.js 18:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-bash"}),"EPROTO B8150000:error:0A000152:SSL routines:final_renegotiate:unsafe legacy renegotiation disabled\n")),(0,o.kt)("p",null,"The source of this error is Node.js 18 disabling unsafe legacy TLS renegotiation. The motivation for this is noble; it's to mitigate ",(0,o.kt)("a",r({parentName:"p"},{href:"https://cve.mitre.org/cgi-bin/cvename.cgi?name=cve-2009-3555"}),"CVE-2009-3555")," by all accounts. Alas, there are APIs that still use legacy TLS negotiation. It appears that one such API is the ",(0,o.kt)("a",r({parentName:"p"},{href:"/teams-notification-webhooks"}),"Teams webhook API"),"."),(0,o.kt)("h2",r({},{id:"the-fix"}),"The fix"),(0,o.kt)("p",null,(0,o.kt)("a",r({parentName:"p"},{href:"https://stackoverflow.com/questions/74324019/allow-legacy-renegotiation-for-nodejs/74600467#74600467"}),"I found the answer on Stack Overflow"),"; but not immediately. So I'm going to record it here since I'm bound to need this again."),(0,o.kt)("p",null,"To cope with older APIs, making an Axios request ends up looking like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",r({parentName:"pre"},{className:"language-ts"}),"import crypto from 'crypto';\nimport https from 'https';\n\n/**\n * Handle this problem with Node 18\n * write EPROTO B8150000:error:0A000152:SSL routines:final_renegotiate:unsafe legacy renegotiation disabled\n * see https://stackoverflow.com/questions/74324019/allow-legacy-renegotiation-for-nodejs/74600467#74600467\n **/\nconst allowLegacyRenegotiationforNodeJsOptions = {\n  httpsAgent: new https.Agent({\n    // for self signed you could also add\n    // rejectUnauthorized: false,\n    // allow legacy server\n    secureOptions: crypto.constants.SSL_OP_LEGACY_SERVER_CONNECT,\n  }),\n};\n\nfunction makeRequest(url: string, data: object) {\n  return axios({\n    ...allowLegacyRenegotiationforNodeJsOptions,\n    url,\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    data: telemetryRequestWrapper,\n  });\n}\n")),(0,o.kt)("p",null,"I'd imagine that you could use this pattern for the fetch API too, but I haven't tried it."))}u.isMDXComponent=!0},4268:(e,t,n)=>{n.d(t,{Z:()=>o});const o=n.p+"assets/images/title-image-44858975d62999ba0013697b9d10be4f.png"}}]);